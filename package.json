{
  "name": "paid-up",
  "description": "paidUp application",
  "version": "1.0.0",
  "author": "@paidUp company",
  "license": "private",
  "private": true,
  "main": "server/app.js",
  "dependencies": {
    "TDCore": "https://github.com/paidup/TDCore/tarball/master",
    "angular": "^1.5.7",
    "angular-animate": "^1.5.7",
    "angular-cookies": "^1.5.7",
    "angular-local-storage": "^0.2.7",
    "angular-resource": "^1.5.7",
    "angular-sanitize": "^1.5.7",
    "angular-translate": "^2.11.0",
    "angular-ui-bootstrap": "^1.3.3",
    "angular-ui-mask": "^1.8.3",
    "angular-ui-router": "^0.3.1",
    "angulartics": "^1.1.2",
    "angulartics-google-analytics": "^0.1.4",
    "angulartics-mixpanel": "^0.1.2",
    "body-parser": "1.15.0",
    "browserify": "^13.0.0",
    "camelize": "^1.0.0",
    "composable-middleware": "0.3.0",
    "compression": "^1.6.2",
    "cookie-parser": "^1.4.3",
    "cors": "^2.7.1",
    "ejs": "^2.4.2",
    "email-templates": "^2.3.0",
    "errorhandler": "1.4.3",
    "express": "4.13.4",
    "jquery": "^2.2.4",
    "lodash": "^4.11.2",
    "method-override": "^2.3.6",
    "moment": "^2.13.0",
    "morgan": "^1.7.0",
    "nodemailer": "^2.3.2",
    "paidup-commerce-connect": "^0.14.7",
    "paidup-product-connect": "^0.5.0",
    "paidup-schedule-connect": "^2.5.1",
    "pmx": "^0.6.1",
    "prerender-node": "^2.2.1",
    "q": "^1.4.1",
    "ramda": "^0.21.0",
    "serve-favicon": "2.3.0",
    "stripe": "^4.7.0",
    "winston": "^2.2.0"
  },
  "devDependencies": {
    "baggage-loader": "^0.2.4",
    "browser-sync": "^2.12.5",
    "chunk-manifest-webpack-plugin": "^0.1.0",
    "browser-sync": "^2.13.0",
    "connect-livereload": "^0.5.4",
    "css-loader": "^0.23.1",
    "extract-text-webpack-plugin": "^1.0.1",
    "faker": "3.1.0",
    "html-loader": "^0.4.3",
    "html-webpack-plugin": "^2.22.0",
    "image-webpack-loader": "^2.0.0",
    "img-loader": "^1.3.1",
    "less": "^2.7.1",
    "less-loader": "^2.2.3",
    "less-plugin-autoprefix": "^1.5.1",
    "less-plugin-clean-css": "^1.5.1",
    "minifyify": "^7.3.3",
    "ng-cache-loader": "0.0.17",
    "ngtemplate-loader": "^1.3.1",
    "nightwatch": "^0.9.3",
    "npm-watch": "^0.1.4",
    "proxyquire": "^1.7.4",
    "raw-loader": "^0.5.1",
    "sinon": "^1.17.3",
    "style-loader": "^0.13.1",
    "supertest": "1.2.0",
    "tape": "^4.5.1",
    "transfer-webpack-plugin": "^0.1.4",
    "url-loader": "^0.5.7",
    "webpack": "^1.13.1",
    "webpack-manifest-plugin": "^1.0.1",
    "tap-json": "^1.0.0",
    "tap-xunit": "^1.4.0"
  },
  "engines": {
    "node": "4.4.2"
  },
  "watch": {
    "build": {
      "patterns": [
        "client",
        "server"
      ],
      "extensions": "html,css,js,less,hbs",
      "ignore": "build",
      "quiet": "false"
    }
  },
  "scripts": {
    "start": "npm run build && node server/app.js",
    "build": "webpack",
    "build:prod": "rm -rf build && webpack -p",
    "watch": "npm-watch",
    "test": "NODE_ENV=test ./node_modules/tape/bin/tape test/**/*.spec.js",
    "clean:dist": "rm -rf dist",
    "clean:build": "rm -rf build",
    "create:dist": "mkdir dist",
    "create:build": "mkdir build",
    "jenkins": "npm run clean:build && npm run create:build && npm test",
    "build:server": "cp -R server/ dist/server",
    "build:client": "npm run front:browserify:prod && npm run front:less && mkdir -p dist && mkdir -p dist/public && cp -R client/* dist/public && rm -rf dist/public/src",
    "production": "NODE_ENV=production node dist/server/app.js",
    "front:browserify:dev": "browserify client/src/app.js --verbose --debug --outfile client/js/bundle.js",
    "front:browserify:prod": "mkdir -p client/js && browserify client/src/app.js -p [minifyify --no-map] > client/js/bundle.js",
    "front:less": "lessc client/src/style.less client/css/style.min.css --autoprefix='> 1%, last 2 versions, Firefox ESR'  --clean-css='--s1 --compatibility=ie8'",
    "front:livereload": "browser-sync start --proxy localhost:9000 --reload-delay 900 --files client !client/src",
    "test:unit": "NODE_ENV=test tape 'test/unit/**/*.js'",
    "test:unit:xml": "NODE_ENV=test tape 'test/unit/**/*.js' | tap-xunit > test/unit/result.xml",
    "test:unit:json": "NODE_ENV=test tape 'test/unit/**/*.js' | tap-json > test/unit/result.json",
    "test:integration": "NODE_ENV=test tape 'test/integration/**/*.js'",
    "test:e2e": "NODE_ENV=test tape 'test/e2e/**/*.js'"
  },
  "config": {
    "blanket": {
      "pattern": [
        "varity/lib"
      ]
    }
  },
  "keywords": [
    "paidUp"
  ]
}
